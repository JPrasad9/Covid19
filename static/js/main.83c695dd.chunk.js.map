{"version":3,"sources":["navbar.js","loadingComponent.js","home.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","type","id","Loading","CircularProgress","Home","useState","countriesList","setcountriesList","gdata","setGdata","bdata","setBdata","dataLoaded","setDataLoaded","countryData","setcountryData","console","log","ele","undefined","ID","class","Country","toUpperCase","TotalConfirmed","NewConfirmed","TotalRecovered","TotalDeaths","useEffect","fetch","method","then","res","json","data","Global","list","Countries","map","catch","err","style","color","fontSize","onChange","e","country","filter","getCountry","target","value","defaultValue","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83c695dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function NavBar() {\r\n  return (\r\n      <div>\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n  <NavLink className=\"nav-link\" to=\"/\"><h5> <strong>Covid Statistics</strong></h5> </NavLink>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n      </div>\r\n\r\n    );\r\n}\r\n","import CircularProgress from '@material-ui/core/CircularProgress';\r\nimport React from 'react';\r\n\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className =\"h-100 mt-5\">\r\n            <div className=\"row justify-content-center align-items-center h-100\">\r\n            <CircularProgress/>\r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useState, useEffect } from \"react\";\r\nimport Loading from './loadingComponent'\r\n\r\n\r\nexport default function Home() {\r\n    const [countriesList, setcountriesList] = useState();\r\n    const [gdata, setGdata] = useState();\r\n    const [bdata, setBdata] = useState();\r\n    const [dataLoaded, setDataLoaded] = useState(false);\r\n    const [countryData, setcountryData] = useState({});\r\n    console.log(\"Country data : \",countryData);\r\n    console.log(bdata);\r\n    const getCountry = (country) => {\r\nconst data = bdata.filter((data) =>  data.Country == country);\r\n setcountryData(data[0]);\r\nconsole.log(\"Country : \",countryData)\r\n};\r\nvar ele;\r\nif(countryData.ID == undefined)\r\n{\r\n    ele = <div></div>;\r\n\r\n}\r\nelse{\r\n        ele =  \r\n        <div class=\" z-depth-1 card my-3 col-sm-12 col-md-8 col-lg-6 card_prod\">\r\n        <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{countryData.Country.toUpperCase()}</h5>\r\n        <hr/>\r\n        <p class=\"card-text\">\r\n        <strong>Total Cases :\r\n        {countryData.TotalConfirmed}</strong>\r\n        </p>\r\n        <p class=\"card-text\">\r\n        <strong> Active Cases :    {countryData.NewConfirmed}</strong>\r\n\r\n\r\n        </p>\r\n        <p class=\"card-text\">\r\n        <strong>Recovered  :  {countryData.TotalRecovered} </strong>\r\n\r\n        </p>\r\n        <p class=\"card-text\">\r\n        <strong>Total Deaths : {countryData.TotalDeaths}</strong>\r\n\r\n        </p>\r\n        </div>\r\n        </div>\r\n}\r\n    // const [country, setcountry] = useState();\r\n\r\n    useEffect(() => {\r\n        console.log(\"use effect!!\");\r\n        fetch(\"/summary\", {\r\n            method: \"GET\",\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(\"data is \", data);\r\n                setGdata(data.Global);\r\n                const list = data.Countries.map((data) => {\r\n                    return data.Country;\r\n                });\r\n                setcountriesList(list);\r\n                setBdata(data.Countries);\r\n                setDataLoaded(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n    console.log(bdata);\r\n    console.log(countriesList);\r\n\r\n    return dataLoaded === false ? (\r\n        <Loading />\r\n    ) : (\r\n        <div>\r\n <div className=\"container \">\r\n\r\n<div className=\"container mt-4\">\r\n    <h2><strong>World Wide Covid Statistics</strong></h2>\r\n    <hr/>\r\n    <div className=\"row\">\r\n        <div className=\"col-12 col-xs-12 col-md-3 col-lg-3 m-1\">\r\n            <div class=\" z-depth-1 card bg-success card_prod\">\r\n                <div class=\"card-body\">\r\n                    <h4 class=\"card-title\">Discharged</h4>\r\n                    <p class=\"card-text\" style={{color : \"white\", fontSize : 25}}>\r\n                        {gdata.TotalRecovered}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-12 col-xs-12 col-md-3 col-lg-3 m-1\">\r\n            <div class=\" z-depth-1 card_prod card bg-warning\">\r\n                <div class=\"card-body\">\r\n                    <h4 class=\"card-title\">Confirmed Cases</h4>\r\n                    <p class=\"card-text\" style={{color : \"white\", fontSize : 25}}>\r\n                        {gdata.TotalConfirmed}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-12 col-xs-12 col-md-3 col-lg-3 m-1\">\r\n            <div class=\" z-depth-1 card bg-danger card_prod\">\r\n                <div class=\"card-body\">\r\n                    <h4 class=\"card-title\">Total Death</h4>\r\n                    <strong>\r\n                    <p class=\"card-text\" style={{color : \"white\", fontSize : 25}}>\r\n                        {gdata.TotalDeaths}</p>\r\n                        </strong>\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n    <div className=\"container mt-4 p-2\">\r\n\r\n    <h3><strong>Select Your Country</strong></h3>\r\n    <hr/>\r\n\r\n        <select   onChange={(e) => getCountry(e.target.value)} id=\"country\" class=\"  browser-default custom-select  col-sm-12 col-md-8 col-lg-6 \">\r\n            <option defaultValue=\"Select Country\" >Select Country</option>\r\n            {countriesList.map((country) => (\r\n\r\n                <option value={country}>{country}\r\n                </option>\r\n\r\n            ))}\r\n            \r\n\r\n        </select>\r\n       \r\n{ele}\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n    \r\n    ","import NavBar from './navbar'\nimport Home from './home'\nimport {Route} from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <div className=\"container-full width h-100\">\n      <NavBar/>\n      <Home/>\n    <div className=\"container\">\n    </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n\n    <App />\n    </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}